{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitRepo\\\\craft-network\\\\react-graph-viz\\\\src\\\\CypherViz.js\";\nimport React from 'react';\nimport './App.css';\nimport ForceGraph2D from 'react-force-graph-2d'; // Usage: <CypherViz driver={driver}/>\n\nclass CypherViz extends React.Component {\n  constructor({\n    driver\n  }) {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        query: event.target.value\n      });\n    };\n\n    this.loadData = async () => {\n      let session = await this.driver.session({\n        database: \"gameofthrones\"\n      });\n      let res = await session.run(this.state.query);\n      session.close();\n      console.log(res);\n      let nodes = new Set();\n      let links = res.records.map(r => {\n        let source = r.get(\"source\");\n        let target = r.get(\"target\");\n        nodes.add(source);\n        nodes.add(target);\n        return {\n          source,\n          target\n        };\n      });\n      nodes = Array.from(nodes).map(name => {\n        return {\n          name\n        };\n      });\n      this.setState({\n        data: {\n          nodes,\n          links\n        }\n      });\n    };\n\n    this.driver = driver;\n    this.state = {\n      query: `\n        MATCH (n:Character)-[:INTERACTS1]->(m:Character) \n        RETURN n.name as source, m.name as target\n        `,\n      data: {\n        nodes: [{\n          \"name\": \"Masataka Hosoo\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Mae Englegeer\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Hosai Matsubayashi\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Hidehiko Matsumoto\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Yoshida\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Masataka Hosoo\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Kawakami\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Toryo Ito\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Mitsuru Yokoyama\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Garrett Uno\",\n          \"color\": \"Customer\"\n        }, {\n          \"name\": \"Ko Kado\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Hide Suzuki\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Sudo\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Ethan Yu\",\n          \"color\": \"Customer\"\n        }, {\n          \"name\": \"Takahashi\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Yusai Okuda\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Annick Luo\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Derech\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Tien-san\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Eddie\",\n          \"color\": \"Customer\"\n        }, {\n          \"name\": \"Yuki Kataoka\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Michael Kozlowski\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Koichi Saito\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Osawa Kiyomi\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Masataka Hosoo\",\n          \"color\": \"Gray\"\n        }, {\n          \"name\": \"Daido-san\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Yui Tanaka\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Alex Kimi\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Vicki Dobbs Beck\",\n          \"color\": \"Customer\"\n        }, {\n          \"name\": \"Gala\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Hirokazu Kato\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Akiteru Kawai\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Tenshin Juba\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Daniel Calderon Arenas\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Ariko\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Genbei\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Nanao\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Nagano,  Ishikawa\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Shogo\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Nina Fradet\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Nanjo\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Aluan Wang\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Masako\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Sachihito Kudo, Kyo Karakami MARUNI\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Gunma\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Sky Whitehead\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Yu Kamimura\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Shoe\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Marta Gasparin\",\n          \"color\": \"Gray\"\n        }, {\n          \"name\": \"Paul Niiro\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Takeshi Shigemizu\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Terui Yamawaki\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Kimoto Yuriko\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Ryoma Noda\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Natsuko Toda\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Morino Keito\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Yandonghong Anna\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Ota Kai\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Banjo\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Matsumoto\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Shiho Fukuhara\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Umi Chae\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Takaaki Murase\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Masaya Kushino\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Kodama\",\n          \"color\": \"Purple\"\n        }, {\n          \"name\": \"Hatta Shun\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Fukutaro Nakayama\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Yuna Yagi\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Sander Wassick\",\n          \"color\": \"Blue\"\n        }, {\n          \"name\": \"Rintaro Akazawa\",\n          \"color\": \"Green\"\n        }, {\n          \"name\": \"Mitasho-san\",\n          \"color\": \"Green\"\n        }],\n        links: [{\n          source: \"Dan Wadwhani\",\n          target: \"Eugene Choi\"\n        }, {\n          source: \"Eugene Choi\",\n          target: \"Masataka Hosoo\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Taeko Hosoo\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Yoshida\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Mae Englegeer\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Hosai Matsubayashi\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"John\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Toryo Ito\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Hidehiko Matsumoto\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Kawakami\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Ami\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Mitsuru Yokoyama\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Ko Kado\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Hide Suzuki\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Sky Whitehead\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Yu Kamimura\"\n        }, {\n          source: \"Masataka Hosoo\",\n          target: \"Yuna Yagi\"\n        }, {\n          source: \"Ami\",\n          target: \"Hosai Matsubayashi\"\n        }, {\n          source: \"Ami\",\n          target: \"Kawakami\"\n        }, {\n          source: \"Shiho Fukuhara\",\n          target: \"Banjo\"\n        }, {\n          source: \"Banjo\",\n          target: \"Masataka Hosoo\"\n        }, {\n          source: \"Banjo\",\n          target: \"Matsumoto\"\n        }, {\n          source: \"Banjo\",\n          target: \"Umi Chae\"\n        }, {\n          source: \"Banjo\",\n          target: \"Takaaki Murase\"\n        }, {\n          source: \"Banjo\",\n          target: \"Matsumoto\"\n        }, {\n          source: \"Banjo\",\n          target: \"Masaya Kushino\"\n        }, {\n          source: \"Banjo\",\n          target: \"Matsumoto\"\n        }, {\n          source: \"Banjo\",\n          target: \"Kodama\"\n        }, {\n          source: \"Banjo\",\n          target: \"Hatta Shun\"\n        }, {\n          source: \"Banjo\",\n          target: \"Yuna Yagi\"\n        }, {\n          source: \"Yuna Yagi\",\n          target: \"Toryo Ito\"\n        }, {\n          source: \"Banjo\",\n          target: \"Matsumoto\"\n        }, {\n          source: \"Banjo\",\n          target: \"Fukutaro Nakayama\"\n        }, {\n          source: \"Fukutaro Nakayama\",\n          target: \"Toryo Ito\"\n        }, {\n          source: \"Sander Wassick\",\n          target: \"Mae Englegeer\"\n        }]\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      style: {\n        display: \"block\",\n        width: \"800px\",\n        height: \"100px\"\n      },\n      value: this.state.query,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.loadData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"Reload\"), /*#__PURE__*/React.createElement(ForceGraph2D, {\n      graphData: this.state.data,\n      nodeId: \"name\",\n      linkCurvature: 0.2,\n      linkDirectionalArrowRelPos: 1,\n      linkDirectionalArrowLength: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default CypherViz;","map":{"version":3,"sources":["D:/GitRepo/craft-network/react-graph-viz/src/CypherViz.js"],"names":["React","ForceGraph2D","CypherViz","Component","constructor","driver","handleChange","event","setState","query","target","value","loadData","session","database","res","run","state","close","console","log","nodes","Set","links","records","map","r","source","get","add","Array","from","name","data","render","display","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ForceGraph2D from 'react-force-graph-2d';\r\n\r\n// Usage: <CypherViz driver={driver}/>\r\n\r\nclass CypherViz extends React.Component {\r\n    constructor({driver}) {\r\n      super();\r\n      this.driver = driver;\r\n      this.state = { \r\n        query: `\r\n        MATCH (n:Character)-[:INTERACTS1]->(m:Character) \r\n        RETURN n.name as source, m.name as target\r\n        `,\r\n        data : {nodes:[\r\n          {\"name\":\"Masataka Hosoo\",\"color\":\"Purple\"},\r\n{\"name\":\"Mae Englegeer\",\"color\":\"Blue\"},\r\n{\"name\":\"Hosai Matsubayashi\",\"color\":\"Green\"},\r\n{\"name\":\"Hidehiko Matsumoto\",\"color\":\"Green\"},\r\n{\"name\":\"Yoshida\",\"color\":\"Green\"},\r\n{\"name\":\"Masataka Hosoo\",\"color\":\"Purple\"},\r\n{\"name\":\"Kawakami\",\"color\":\"Green\"},\r\n{\"name\":\"Toryo Ito\",\"color\":\"Green\"},\r\n{\"name\":\"Mitsuru Yokoyama\",\"color\":\"Green\"},\r\n{\"name\":\"Garrett Uno\",\"color\":\"Customer\"},\r\n{\"name\":\"Ko Kado\",\"color\":\"Green\"},\r\n{\"name\":\"Hide Suzuki\",\"color\":\"Purple\"},\r\n{\"name\":\"Sudo\",\"color\":\"Green\"},\r\n{\"name\":\"Ethan Yu\",\"color\":\"Customer\"},\r\n{\"name\":\"Takahashi\",\"color\":\"Purple\"},\r\n{\"name\":\"Yusai Okuda\",\"color\":\"Green\"},\r\n{\"name\":\"Annick Luo\",\"color\":\"Purple\"},\r\n{\"name\":\"Derech\",\"color\":\"Blue\"},\r\n{\"name\":\"Tien-san\",\"color\":\"Green\"},\r\n{\"name\":\"Eddie\",\"color\":\"Customer\"},\r\n{\"name\":\"Yuki Kataoka\",\"color\":\"Green\"},\r\n{\"name\":\"Michael Kozlowski\",\"color\":\"Blue\"},\r\n{\"name\":\"Koichi Saito\",\"color\":\"Purple\"},\r\n{\"name\":\"Osawa Kiyomi\",\"color\":\"Green\"},\r\n{\"name\":\"Masataka Hosoo\",\"color\":\"Gray\"},\r\n{\"name\":\"Daido-san\",\"color\":\"Green\"},\r\n{\"name\":\"Yui Tanaka\",\"color\":\"Blue\"},\r\n{\"name\":\"Alex Kimi\",\"color\":\"Blue\"},\r\n{\"name\":\"Vicki Dobbs Beck\",\"color\":\"Customer\"},\r\n{\"name\":\"Gala\",\"color\":\"Blue\"},\r\n{\"name\":\"Hirokazu Kato\",\"color\":\"Green\"},\r\n{\"name\":\"Akiteru Kawai\",\"color\":\"Green\"},\r\n{\"name\":\"Tenshin Juba\",\"color\":\"Green\"},\r\n{\"name\":\"Daniel Calderon Arenas\",\"color\":\"Blue\"},\r\n{\"name\":\"Ariko\",\"color\":\"Green\"},\r\n{\"name\":\"Genbei\",\"color\":\"Green\"},\r\n{\"name\":\"Nanao\",\"color\":\"Blue\"},\r\n{\"name\":\"Nagano,  Ishikawa\",\"color\":\"Green\"},\r\n{\"name\":\"Shogo\",\"color\":\"Green\"},\r\n{\"name\":\"Nina Fradet\",\"color\":\"Blue\"},\r\n{\"name\":\"Nanjo\",\"color\":\"Green\"},\r\n{\"name\":\"Aluan Wang\",\"color\":\"Blue\"},\r\n{\"name\":\"Masako\",\"color\":\"Green\"},\r\n{\"name\":\"Sachihito Kudo, Kyo Karakami MARUNI\",\"color\":\"Green\"},\r\n{\"name\":\"Gunma\",\"color\":\"Green\"},\r\n{\"name\":\"Sky Whitehead\",\"color\":\"Purple\"},\r\n{\"name\":\"Yu Kamimura\",\"color\":\"Purple\"},\r\n{\"name\":\"Shoe\",\"color\":\"Purple\"},\r\n{\"name\":\"Marta Gasparin\",\"color\":\"Gray\"},\r\n{\"name\":\"Paul Niiro\",\"color\":\"Green\"},\r\n{\"name\":\"Takeshi Shigemizu\",\"color\":\"Green\"},\r\n{\"name\":\"Terui Yamawaki\",\"color\":\"Green\"},\r\n{\"name\":\"Kimoto Yuriko\",\"color\":\"Green\"},\r\n{\"name\":\"Ryoma Noda\",\"color\":\"Green\"},\r\n{\"name\":\"Natsuko Toda\",\"color\":\"Green\"},\r\n{\"name\":\"Morino Keito\",\"color\":\"Green\"},\r\n{\"name\":\"Yandonghong Anna\",\"color\":\"Green\"},\r\n{\"name\":\"Ota Kai\",\"color\":\"Green\"},\r\n{\"name\":\"Banjo\",\"color\":\"Purple\"},\r\n{\"name\":\"Matsumoto\",\"color\":\"Blue\"},\r\n{\"name\":\"Shiho Fukuhara\",\"color\":\"Blue\"},\r\n{\"name\":\"Umi Chae\",\"color\":\"Green\"},\r\n{\"name\":\"Takaaki Murase\",\"color\":\"Blue\"},\r\n{\"name\":\"Masaya Kushino\",\"color\":\"Blue\"},\r\n{\"name\":\"Kodama\",\"color\":\"Purple\"},\r\n{\"name\":\"Hatta Shun\",\"color\":\"Green\"},\r\n{\"name\":\"Fukutaro Nakayama\",\"color\":\"Green\"},\r\n{\"name\":\"Yuna Yagi\",\"color\":\"Blue\"},\r\n{\"name\":\"Sander Wassick\",\"color\":\"Blue\"},\r\n{\"name\":\"Rintaro Akazawa\",\"color\":\"Green\"},\r\n{\"name\":\"Mitasho-san\",\"color\":\"Green\"}\r\n          ],\r\n        links:[\r\n          {source:\"Dan Wadwhani\",target:\"Eugene Choi\"},\r\n          {source:\"Eugene Choi\",target:\"Masataka Hosoo\"},\r\n          {source:\"Masataka Hosoo\",target:\"Taeko Hosoo\"},\r\n          {source:\"Masataka Hosoo\",target:\"Yoshida\"},\r\n          {source:\"Masataka Hosoo\",target:\"Mae Englegeer\"},\r\n          {source:\"Masataka Hosoo\",target:\"Hosai Matsubayashi\"},\r\n          {source:\"Masataka Hosoo\",target:\"John\"},\r\n          {source:\"Masataka Hosoo\",target:\"Toryo Ito\"},\r\n          {source:\"Masataka Hosoo\",target:\"Hidehiko Matsumoto\"},\r\n          {source:\"Masataka Hosoo\",target:\"Kawakami\"},\r\n          {source:\"Masataka Hosoo\",target:\"Ami\"},\r\n          {source:\"Masataka Hosoo\",target:\"Mitsuru Yokoyama\"},\r\n          {source:\"Masataka Hosoo\",target:\"Ko Kado\"},\r\n          {source:\"Masataka Hosoo\",target:\"Hide Suzuki\"},\r\n          {source:\"Masataka Hosoo\",target:\"Sky Whitehead\"},\r\n          {source:\"Masataka Hosoo\",target:\"Yu Kamimura\"},\r\n          {source:\"Masataka Hosoo\",target:\"Yuna Yagi\"},\r\n          {source:\"Ami\",target:\"Hosai Matsubayashi\"},\r\n          {source:\"Ami\",target:\"Kawakami\"},\r\n          {source:\"Shiho Fukuhara\", target:\"Banjo\"},\r\n          {source:\"Banjo\", target:\"Masataka Hosoo\"},\r\n          {source:\"Banjo\",target:\"Matsumoto\"},\r\n          {source:\"Banjo\",target:\"Umi Chae\"},\r\n          {source:\"Banjo\",target:\"Takaaki Murase\"},\r\n          {source:\"Banjo\",target:\"Matsumoto\"},\r\n          {source:\"Banjo\",target:\"Masaya Kushino\"},\r\n          {source:\"Banjo\",target:\"Matsumoto\"},\r\n          {source:\"Banjo\",target:\"Kodama\"},\r\n          {source:\"Banjo\",target:\"Hatta Shun\"},\r\n          {source:\"Banjo\",target:\"Yuna Yagi\"},\r\n          {source:\"Yuna Yagi\",target:\"Toryo Ito\"},\r\n          {source:\"Banjo\",target:\"Matsumoto\"},\r\n          {source:\"Banjo\",target:\"Fukutaro Nakayama\"},\r\n          {source:\"Fukutaro Nakayama\",target:\"Toryo Ito\"},\r\n          {source:\"Sander Wassick\",target:\"Mae Englegeer\"},\r\n          ]} }\r\n    }\r\n  \r\n    handleChange = (event) => {\r\n      this.setState({query:event.target.value})\r\n    }\r\n    loadData = async () => {\r\n      let session = await this.driver.session({database:\"gameofthrones\"});\r\n      let res = await session.run(this.state.query);\r\n      session.close();\r\n      console.log(res);\r\n      let nodes = new Set();\r\n      let links = res.records.map(r => {\r\n        let source = r.get(\"source\");\r\n        let target = r.get(\"target\");\r\n        nodes.add(source);\r\n        nodes.add(target);\r\n        return {source, target}});\r\n      nodes = Array.from(nodes).map(name => {return {name}});\r\n      this.setState({ data : {nodes, links}});\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n          <textarea style={{display:\"block\",width:\"800px\", height:\"100px\"}} \r\n                    value={this.state.query}\r\n                    onChange={this.handleChange}/>\r\n          <button onClick={this.loadData}>Reload</button>\r\n          <ForceGraph2D graphData={this.state.data} nodeId=\"name\" \r\n                    linkCurvature={0.2} linkDirectionalArrowRelPos={1} linkDirectionalArrowLength={10}/>\r\n        </div>\r\n      );  \r\n    }\r\n  }\r\n  \r\n  export default CypherViz"]},"metadata":{},"sourceType":"module"}